#!/usr/bin/env groovy

timeout(120) {
node('py36') {
  wrap([$class: 'MesosSingleUseSlave']) {
  wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'XTerm']) {

    // Hardcoded default values are:
    // DC/OS OS: channel="testing/pull/1739", for open cluster
    // DC/OS EE: channel="testing/pull/1296", for strict, permissive or disabled clusters
    // The channel can be passed to the job in Jenkins (Build with Parameters) so that this job can be executed against any PR/cluster.
    properties([
            // Run pipeline at 0:00, 6:00, 12:00 and 18:00.
            pipelineTriggers([cron('0 0,6,12,18 * * *')]),
            parameters([
                    string(name: 'channel',
                            defaultValue: 'testing/pull/1739',
                            description: 'PR to start the cluster from e.g. testing/pull/1739'
                    )]
            )
    ])

    stage("Run System Integration Test Pipeline") {
      try {
        checkout scm
        withCredentials(
          [ [$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'mesosphere-ci-marathon', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'],
            [$class: 'FileBinding', credentialsId: '11fcc957-5156-4470-ae34-d433da88248a', variable: 'DOT_SHAKEDOWN'],
            [$class: 'StringBinding', credentialsId: '7bdd2775-2911-41ba-918f-59c8ae52326d', variable: 'DOCKER_HUB_USERNAME'],
            [$class: 'StringBinding', credentialsId: '42f2e3fb-3f4f-47b2-a128-10ac6d0f6825', variable: 'DOCKER_HUB_PASSWORD']
          ]) {
            sh """./ci/si_pipeline.sh $params.channel open"""
          }
        } finally {
            junit allowEmptyResults: true, testResults: 'shakedown.xml'
            archive includes: "diagnostics.zip"
        }
    }
  }
  }
}
}
