filter {
  grok {
    match => {
      "message" => "^(\[(?<logdate>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})\] %{LOGLEVEL:logLevel} *%{GREEDYDATA:message}|%{TIMESTAMP_ISO8601:logdate}: *%{GREEDYDATA:message})"
    }
    overwrite => [ "message" ]
    tag_on_failure => []
    remove_field => [ "@version", "port" ]
    add_tag => ["unclassified"]
  }
  date {
    match => [ "logdate",  "yyyy-MM-dd HH:mm:ss,SSS" ]
    timezone => "UTC"
    remove_field => [ "logdate" ]
  }

  # ========================================
  grok {
    match => {"message" => "^Received health result for app \[(?<appName>\S+)\] version \[%{TIMESTAMP_ISO8601:version}\]: \[(?<status>[^(]+)\(instance \[(?<instanceId>[^\]]+)\]"}
    add_field => {"class" => "health"}
    add_field => {"class2" => "result"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Already running \d+ instances of (?<appName>\S+)\."}
    add_field => {"class" => "scale-check"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^%{IP:httpHost} - (?<user>%{WORD}|-)[^\"]*\"(?<method>GET|PUT|DELETE|POST|HEAD)\s+(http:|https:|)//(?<authority>[^/]+)%{URIPATH:uri}(?:%{URIPARAM:params})?.*?\" %{POSINT:httpStatus:int} %{POSINT:size:int}"}
    add_field => {"class" => "http"}
    add_field => {"class2" => "response"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Received new forced deployment plan %{UUID:planId}"}
    add_field => {"class" => "deploy"}
    add_field => {"class2" => "force"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Stored new deployment plan %{UUID:planId}"}
    add_field => {"class" => "deploy"}
    add_field => {"class2" => "store"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Deployment %{UUID:planId}:%{TIMESTAMP_ISO8601:version} of (?<pathId>\S+) (?<status>\S+)"}
    add_field => {"class" => "deploy"}
    add_field => {"class2" => "complete"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Conflicting deployments .+ for deployment %{UUID:planId} have been canceled"}
    add_field => {"class" => "deploy"}
    add_field => {"class2" => "cancel"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Killing known task"}
    add_field => {"class" => "tasks"}
    add_field => {"class2" => "killing"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Killing \d+ tasks for reason: (?<reason>\S+)"}
    add_field => {"class" => "tasks"}
    add_field => {"class2" => "killing"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^processing \d kills"}
    add_field => {"class" => "tasks"}
    add_field => {"class2" => "kill"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Updated groups/apps/pods according to deployment plan %{UUID:planId}"}
    add_field => {"class" => "deploy"}
    add_field => {"class2" => "step"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Using deprecated embed"}
    add_field => {"class" => "http"}
    add_field => {"class2" => "deprecated"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Finished processing %{UUID:offerId}"}
    add_field => {"class" => "offer"}
    add_field => {"class2" => "processed"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Starting health check actor for app \[(?<appName>\S+)\] version \[%{TIMESTAMP_ISO8601:version}\]"}
    add_field => {"class" => "health"}
    add_field => {"class2" => "launch"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Removing %{UUID:planId} from list of running deployments"}
    add_field => {"class" => "deploy"}
    add_field => {"class2" => "removed"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Received new deployment plan %{UUID:planId}"}
    add_field => {"class" => "deploy"}
    add_field => {"class2" => "new"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Computed new deployment plan.+DeploymentPlan id=%{UUID:planId}"}
    add_field => {"class" => "deploy"}
    add_field => {"class2" => "computed"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Launching DeploymentActor for %{UUID:planId}"}
    add_field => {"class" => "deploy"}
    add_field => {"class2" => "new"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^\[(?<appName>\S+)\]: scaling op detected for app"}
    add_field => {"class" => "deploy"}
    add_field => {"class2" => "scale"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Received offers WANTED notification"}
    add_field => {"class" => "offer"}
    add_field => {"class2" => "wanted"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Ignoring ReviveOffers"}
    add_field => {"class" => "offer"}
    add_field => {"class2" => "ignore-revive"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Received status update for task (?<taskId>\S+): (?<status>\S+)"}
    add_field => {"class" => "tasks"}
    add_field => {"class2" => "status"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Acknowledge status update for task (?<taskId>\S+): (?<status>\S+)"}
    add_field => {"class" => "tasks"}
    add_field => {"class2" => "status-ack"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Deleting (?<what>\S+) Versions.+GcActor"}
    add_field => {"class" => "gc"}
    add_field => {"class2" => "delete"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Completed %{DATA:action} in PT%{BASE10NUM:seconds:float}S.+GcActor"}
    add_field => {"class" => "gc"}
    add_field => {"class2" => "complete"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^Processing (?<command>Launch\S*)\(Instance\(instance \[(?<instanceId>[^\]]+)\],AgentInfo\((?<agentId>[^\)]+)\)"}
    add_field => {"class" => "tasks"}
    add_field => {"class2" => "launch"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }

  grok {
    match => {"message" => "^Upgrade root group version:%{TIMESTAMP_ISO8601:version} with force:(?<force>true|false)"}
    add_field => {"class" => "deploy"}
    add_field => {"class2" => "upgrade"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }

  grok {
    match => {"message" => "^(Futures|Ask) timed out.+?DeploymentManager/%{UUID:planId}" }
    add_field => {"class" => "deploy" }
    add_field => {"class2" => "fail" }
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }

  grok {
    match => {"message" => "^Connection attempt to (?<hostPort>\S+) failed in response"}
    add_field => {"class" => "health"}
    add_field => {"class2" => "error"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }

  grok {
    match => {"message" => "^Configured connecting timeout of \d+ seconds expired, stopping" }
    add_field => {"class" => "health"}
    add_field => {"class2" => "error"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }

  grok {
    match => {"message" => "^receiveInstanceUpdate: instance \[(?<instanceId>[^\]]+)\] was %{DATA:action} \(%{DATA:status}\)" }
    add_field => {"class" => "instance"}
    add_field => {"class2" => "status"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => {"message" => "^initiating a scale check for runSpec \[(?<appName>\S+)\] due to \[(?<instanceId>[^\]]+)\]+ (?<reason>\S+)" }
    add_field => {"class" => "scale-check"}
    add_field => {"class2" => "init-for-cause"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => { "message" => "^Leadership info is consistent again" }
    add_field => {"class" => "leader"}
    add_field => {"class2" => "elected-ready"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => { "message" => "^Will do leader election through" }
    add_field => {"class" => "leader"}
    add_field => {"class2" => "offer"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => { "message" => "^failed to proxy response headers from leader" }
    add_field => {"class" => "leader"}
    add_field => {"class2" => "proxy-fail"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => { "message" => "^Waiting for consistent leadership state. Are we leader\?:" }
    add_field => {"class" => "leader"}
    add_field => {"class2" => "wait-consistent"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }

  grok {
    match => { "message" => "^\[GC \(Metadata GC Threshold\) \[PSYoungGen: %{INT:psYoungGenFromK:int}K->%{INT:psYoungGenToK:int}K\(%{INT:psYoungGenK:int}K\)\] %{INT:psOldGenFromK:INT}K->%{INT:psOldGenToK:int}K\(%{INT:psOldGenK:int}K\), %{BASE10NUM:secs:float}"}
    add_field => {"class" => "gc"}
    add_field => {"class2" => "young"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
  grok {
    match => { "message" => "^\[Full GC \(Metadata GC Threshold\) \[PSYoungGen: %{INT:psYoungGenFromK:int}K->%{INT:psYoungGenToK:int}K\(%{INT:psYoungGenK:int}K\)\] *\[ParOldGen: %{INT:psOldGenFromK:int}K->%{INT:psOldGenToK:int}K\(%{INT:psOldGenK:int}K\)\] *[^,]+, \[Metaspace: %{INT:metaspaceFromK:int}K->%{INT:metaspaceToK:int}K\(%{INT:metaspaceK:int}K\)\], %{BASE10NUM:secs:float}"}
    add_field => {"class" => "gc"}
    add_field => {"class2" => "full"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }

  grok {
    match => { "message" => "^task reconciliation has finished"}
    add_field => {"class" => "reconcile"}
    add_field => {"class2" => "finish"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }

  grok {
    match => { "message" => "^initiate task reconciliation"}
    add_field => {"class" => "reconcile"}
    add_field => {"class2" => "initiate"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }

  grok {
    match => { "message" => "^Requesting task reconciliation with the Mesos master"}
    add_field => {"class" => "reconcile"}
    add_field => {"class2" => "requested"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }

  grok {
    match => {"message" => "Exception:.+\tat"}
    add_field => {"class" => "exception"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }

  grok {
    match => {"message" => "reconcile \[(?<appName>\S+)\] with latest version \[%{TIMESTAMP_ISO8601:version}\]"}
    add_field => {"class" => "health"}
    add_field => {"class2" => "reconcile"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }

  grok {
    match => {"message" => "^Proxying request to (?<method>GET|PUT|DELETE|POST|HEAD) (?<protocol>https?)://(?<authority>[^/]+)%{URIPATH:uri}(?:%{URIPARAM:params})? from .+"}
    add_field => {"class" => "http"}
    add_field => {"class2" => "proxy"}
    tag_on_failure => []
    remove_tag => ["unclassified"]
  }
}
